{"version":3,"sources":["helper/CalcOrientation.ts","helper/Clock.ts","../node_modules/events/events.js","nodes/SounityBaseNode.ts","nodes/SounityOutputNode.ts","helper/DefaultOptions.ts","helper/SoundLoader.ts","nodes/SounitySoundNode.ts","SounityController.ts","main.ts"],"names":["ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","module","exports","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","length","warned","w","Error","String","name","emitter","count","onceWrapper","fired","arguments","removeListener","wrapFn","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","Array","i","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","flags","on","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","keys","key","rawListeners","eventNames"],"mappings":"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","file":"main.js","sourceRoot":"..\\src\\sounity-cef\\src","sourcesContent":["// source: https://github.com/jakubfiala/panner-utils\n\nexport const principalAxesToOrientation = (y = 0, p = 0, r = 0) => {\n  const { yaw = 0, pitch = 0, roll = 0 } = typeof y === 'object' ? y : { yaw: y, pitch: p, roll: r };\n  // vector determining which way the listener is facing\n  const forward = { x: 0, y: 0, z: 0 };\n  // vector determining the rotation of the listener's head\n  // where no rotation means the head is pointing up\n  const up = { x: 0, y: 0, z: 0 };\n\n  // Yaw (a.k.a. heading) is the rotation around the Y axis\n  // convert to radians first\n  const yawRad = yaw * (Math.PI / 180);\n  // at 0 degrees, the X component should be 0\n  //so we calculate it using sin(), which starts at 0\n  forward.x = Math.sin(yawRad);\n  // at 0 degrees, the Z component should be -1,\n  // because the negative Z axis points *away from* the listener\n  // so we calculate it using cos(), which starts at 1\n  // with a phase shift of 90 degrees (or PI radians)\n  forward.z = Math.cos(yawRad + Math.PI);\n\n  // Pitch is the rotation around the X axis\n  // we can use it to calculate both vectors' Y components\n  const pitchRad = pitch * (Math.PI / 180);\n  // Forward Y component should start at 0\n  forward.y = Math.sin(pitchRad);\n  // Up Y component should start at 1 (top of the head pointing up)\n  up.y = Math.cos(pitchRad);\n\n  // Roll is the rotation around the Z axis\n  const rollRad = roll * (Math.PI / 180);\n  // both X and Y components should start at 0\n  // (top of the head pointing directly upwards)\n  up.x = Math.sin(rollRad);\n  up.z = Math.sin(rollRad);\n\n  return { forward, up };\n};\n","export default class Clock {\n  private currentTime: number;\n\n  constructor() {\n    this.currentTime = Date.now();\n  }\n\n  getDelta() {\n    const newTime = Date.now();\n    const diff = (newTime - this.currentTime) / 1000;\n    this.currentTime = newTime;\n\n    return diff;\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import { EventEmitter } from 'events';\nimport SountiyController, { FilterType } from '../SounityController';\n\nexport default abstract class SounityBaseNode {\n  private outputNode: AudioNode;\n  private destination: AudioNode;\n  private eventEmitter = new EventEmitter();\n  private loadingFilters: Record<string, Promise<void>> = {};\n  private activeFilters: Record<string, AudioNode> = {};\n  private outputFilterNode: AudioNode;\n  private filterChain: string[] = [];\n  protected sounityController: SountiyController;\n  protected audioCtx: AudioContext;\n\n  protected constructor(sounityController: SountiyController) {\n    this.sounityController = sounityController;\n    this.audioCtx = sounityController.getAudioCtx();\n  }\n\n  public on(type: string, listener: (...args: any[]) => void) {\n    this.eventEmitter.on(type, listener);\n  }\n\n  public emit(type: string, ...args: any[]) {\n    return this.eventEmitter.emit(type, ...args);\n  }\n\n  public once(type: string, listener: (...args: any[]) => void) {\n    this.eventEmitter.once(type, listener);\n  }\n\n  protected setOutputNode(node: AudioNode) {\n    if (this.destination) {\n      this.outputNode && this.outputNode.disconnect(this.destination);\n      node.connect(this.destination);\n    }\n\n    this.outputNode = node;\n  }\n\n  connect(node: AudioNode) {\n    if (this.destination) {\n      if (this.hasActiveFilters()) {\n        this.outputFilterNode && this.outputFilterNode.disconnect(this.destination);\n      } else {\n        this.outputNode && this.outputNode.disconnect(this.destination);\n      }\n    }\n\n    if (this.hasActiveFilters()) {\n      this.outputFilterNode && this.outputFilterNode.connect(node);\n    } else {\n      this.outputNode && this.outputNode.connect(node);\n    }\n\n    this.destination = node;\n  }\n\n  disconnect() {\n    if (this.hasActiveFilters()) {\n      this.outputFilterNode && this.outputFilterNode.disconnect();\n    } else {\n      this.outputNode && this.outputNode.disconnect();\n    }\n\n    this.destination = null;\n  }\n\n  async addFilter(filterName: string) {\n    if (filterName in this.activeFilters) {\n      throw new Error(`There is already a active filter with given identifier '${filterName}'`);\n    }\n\n    await (this.loadingFilters[filterName] = this.addFilterAsync(filterName));\n    delete this.loadingFilters[filterName];\n  }\n\n  private async addFilterAsync(filterName: string) {\n    const options = this.sounityController.getFilterOptions(filterName);\n\n    let filterNode;\n    if (options.type === 'biquad') {\n      const filterOptions: BiquadFilterOptions = options.options;\n      filterNode = new BiquadFilterNode(this.audioCtx, filterOptions);\n    } else if (options.type === 'convolver') {\n      const filterOptions: { url: string; disableNormalization: boolean } = options.options;\n      const response = await fetch(filterOptions.url);\n      const arraybuffer = await response.arrayBuffer();\n      const buffer = await this.audioCtx.decodeAudioData(arraybuffer);\n      filterNode = new ConvolverNode(this.audioCtx, {\n        buffer,\n        disableNormalization: filterOptions.disableNormalization,\n      });\n    }\n\n    if (!filterNode) {\n      throw new Error(`Invalid filter type '${options.type}'`);\n    }\n\n    this.activeFilters[filterName] = filterNode;\n    this.connectFilter(filterName);\n  }\n\n  private connectFilter(filterName: string) {\n    const newLastNode = this.activeFilters[filterName];\n    if (this.filterChain.length) {\n      const currentLastFilterNode = this.activeFilters[this.filterChain[this.filterChain.length - 1]] as AudioNode;\n      if (this.destination) {\n        currentLastFilterNode.disconnect(this.destination);\n        currentLastFilterNode.connect(newLastNode);\n        newLastNode.connect(this.destination);\n        this.outputFilterNode = newLastNode;\n      } else {\n        currentLastFilterNode.connect(newLastNode);\n        this.outputFilterNode = newLastNode;\n      }\n    } else {\n      this.destination && this.outputNode.disconnect(this.destination);\n      this.outputNode.connect(newLastNode);\n      this.outputFilterNode = newLastNode;\n      this.destination && newLastNode.connect(this.destination);\n    }\n\n    this.filterChain.push(filterName);\n  }\n\n  private hasActiveFilters(): boolean {\n    return this.filterChain.length > 0;\n  }\n\n  async removeFilter(filterName: string) {\n    if (this.loadingFilters[filterName]) {\n      await this.loadingFilters[filterName];\n    }\n\n    const nodeToBeRemoved = this.activeFilters[filterName];\n\n    if (nodeToBeRemoved === undefined) {\n      throw new Error(`Invalid filtername '${filterName}'.`);\n    }\n\n    const order = this.filterChain.indexOf(filterName);\n    const isLast = order === this.filterChain.length - 1;\n    const isFirst = order === 0;\n\n    if (!isFirst && !isLast) {\n      const previousNode = this.activeFilters[this.filterChain[order - 1]] as AudioNode;\n      const nextNode = this.activeFilters[this.filterChain[order + 1]] as AudioNode;\n      previousNode.disconnect(nodeToBeRemoved);\n      nodeToBeRemoved.disconnect(nextNode);\n      previousNode.connect(nextNode);\n    } else if (isFirst && !isLast) {\n      const nextNode = this.activeFilters[this.filterChain[order + 1]] as AudioNode;\n      this.outputNode && this.outputNode.disconnect(nodeToBeRemoved);\n      this.outputNode && this.outputNode.connect(nextNode);\n      nodeToBeRemoved.disconnect(nextNode);\n    } else if (!isFirst && isLast) {\n      const previousNode = this.activeFilters[this.filterChain[order - 1]] as AudioNode;\n      previousNode.disconnect(nodeToBeRemoved);\n      this.destination && nodeToBeRemoved.disconnect(this.destination);\n      this.destination && previousNode.connect(this.destination);\n    } else if (isFirst && isLast) {\n      nodeToBeRemoved.disconnect(this.destination);\n      this.outputNode.disconnect(nodeToBeRemoved);\n      this.destination && this.outputNode.connect(this.destination);\n    }\n\n    this.filterChain.splice(order, 1);\n    delete this.activeFilters[filterName];\n  }\n\n  abstract tick(endTime: number): void;\n}\n","import SounityBaseNode from './SounityBaseNode';\nimport SountiyController from '../SounityController';\n\nexport default class SounityOutputNode extends SounityBaseNode {\n  private masterVolumeGainNode: GainNode;\n\n  public constructor(controller: SountiyController) {\n    super(controller);\n\n    this.masterVolumeGainNode = this.audioCtx.createGain();\n\n    this.setOutputNode(this.masterVolumeGainNode);\n  }\n\n  public getInputNode(): AudioNode {\n    return this.masterVolumeGainNode;\n  }\n\n  public tick(endTime: number) {}\n}\n","import ISourceNodeOptions from '../nodes/ISourceNodeOptions';\n\nconst DefaultOptions: ISourceNodeOptions = {};\n\n//@ts-ignore\nfetch(`https://${GetParentResourceName()}/sounity:get-defaults`)\n  .then((response) => response.text())\n  .then((text) => JSON.parse(JSON.parse(text)))\n  .then((json_defaults) => Object.keys(json_defaults).forEach((key) => (DefaultOptions[key] = json_defaults[key])));\n\nexport function Get<T extends ISourceNodeOptions, K extends keyof T>(key: K, optionsValue: T[K], fallback: T[K]): T[K] {\n  if (optionsValue !== undefined) return optionsValue;\n  // @ts-ignore\n  if (key in DefaultOptions) return DefaultOptions[key];\n\n  return fallback;\n}\n","export default class SoundLoader {\n  private static instance: SoundLoader = null;\n\n  static getInstance(): SoundLoader {\n    if (this.instance === null) this.instance = new SoundLoader();\n\n    return this.instance;\n  }\n\n  private cache: Record<string, Blob> = {};\n\n  public loadUrl(url: string): Promise<ArrayBuffer> {\n    return new Promise(async (resolve, reject) => {\n      if (url in this.cache) return resolve(await this.cache[url].arrayBuffer());\n\n      fetch(url)\n        .then(async (response) => {\n          const blob = await response.blob();\n          this.cache[url] = blob;\n\n          return await blob.arrayBuffer();\n        })\n        .then((buffer) => {\n          resolve(buffer);\n        })\n        .catch(reject);\n    });\n  }\n}\n","import { principalAxesToOrientation } from '../helper/CalcOrientation';\nimport * as DefaultOptions from '../helper/DefaultOptions';\nimport ISourceNodeOptions from './ISourceNodeOptions';\nimport SounityBaseNode from './SounityBaseNode';\nimport SountiyController from '../SounityController';\nimport SoundLoader from '../helper/SoundLoader';\n\nexport enum ESounitySourceNodeState {\n  SETUP,\n  READY,\n  PLAYING,\n  FINISHED,\n  ERROR,\n}\n\nexport default class SounitySourceNode extends SounityBaseNode {\n  private state: ESounitySourceNodeState = ESounitySourceNodeState.SETUP;\n  private options: ISourceNodeOptions;\n  private identifier: string;\n  private url: string;\n  private outputType: 'sfx' | 'music';\n  private duration?: number;\n  private volume: number;\n  private loop: boolean;\n\n  private posX: number;\n  private posY: number;\n  private posZ: number;\n\n  private rotX: number;\n  private rotY: number;\n  private rotZ: number;\n\n  private audioBuffer: AudioBuffer;\n  private audioBufferSourceNode: AudioBufferSourceNode;\n  private volumeGainNode: GainNode;\n  private pannerNode: PannerNode;\n\n  public constructor(\n    identifier: string,\n    url: string,\n    options: ISourceNodeOptions,\n    sounityController: SountiyController\n  ) {\n    super(sounityController);\n\n    this.identifier = identifier;\n    this.url = url;\n    this.sounityController = sounityController;\n    this.audioCtx = sounityController.getAudioCtx();\n    this.options = options;\n    this.loop = DefaultOptions.Get('loop', options.loop, false);\n\n    this.outputType = DefaultOptions.Get('outputType', options.outputType, 'sfx');\n\n    this.volume = DefaultOptions.Get('volume', options.volume, 1);\n\n    this.move(\n      DefaultOptions.Get('posX', options.posX, 0),\n      DefaultOptions.Get('posY', options.posY, 0),\n      DefaultOptions.Get('posZ', options.posZ, 0)\n    );\n\n    this.rotate(\n      DefaultOptions.Get('rotX', options.rotX, 0),\n      DefaultOptions.Get('rotY', options.rotY, 0),\n      DefaultOptions.Get('rotZ', options.rotZ, 0)\n    );\n\n    this.setup();\n  }\n\n  private async setup() {\n    const promiseStack: Promise<void>[] = [];\n\n    this.audioBuffer = await this.audioCtx.decodeAudioData(await SoundLoader.getInstance().loadUrl(this.url));\n\n    this.audioBufferSourceNode = this.audioCtx.createBufferSource();\n    this.audioBufferSourceNode.loop = DefaultOptions.Get('loop', this.options.loop, false);\n    this.audioBufferSourceNode.buffer = this.audioBuffer;\n    this.duration = this.audioBuffer.duration;\n\n    this.volumeGainNode = this.audioCtx.createGain();\n    this.volumeGainNode.gain.value = this.getVolume();\n\n    this.pannerNode = this.audioCtx.createPanner();\n    this.pannerNode.panningModel = DefaultOptions.Get('panningModel', this.options.panningModel, 'HRTF');\n    this.pannerNode.distanceModel = DefaultOptions.Get('distanceModel', this.options.distanceModel, 'inverse');\n    this.pannerNode.maxDistance = DefaultOptions.Get('maxDistance', this.options.maxDistance, 500);\n    this.pannerNode.refDistance = DefaultOptions.Get('refDistance', this.options.refDistance, 3);\n    this.pannerNode.rolloffFactor = DefaultOptions.Get('rolloffFactor', this.options.refDistance, 1);\n    this.pannerNode.coneInnerAngle = DefaultOptions.Get('coneInnerAngle', this.options.coneInnerAngle, 360);\n    this.pannerNode.coneOuterAngle = DefaultOptions.Get('coneOuterAngle', this.options.coneOuterAngle, 0);\n    this.pannerNode.coneOuterGain = DefaultOptions.Get('coneOuterGain', this.options.coneOuterGain, 0);\n\n    this.pannerNode.positionX.value = this.posX;\n    this.pannerNode.positionY.value = this.posY;\n    this.pannerNode.positionZ.value = this.posZ;\n\n    this.pannerNode.orientationX.value = this.rotX;\n    this.pannerNode.orientationY.value = this.rotY;\n    this.pannerNode.orientationZ.value = this.rotZ;\n\n    this.audioBufferSourceNode.connect(this.volumeGainNode);\n    this.volumeGainNode.connect(this.pannerNode);\n    this.setOutputNode(this.pannerNode);\n\n    try {\n      await Promise.all(promiseStack);\n      this.setState(ESounitySourceNodeState.READY);\n    } catch (err) {\n      console.error(err);\n      this.setState(ESounitySourceNodeState.ERROR);\n    }\n  }\n\n  private setState(state: ESounitySourceNodeState) {\n    this.state = state;\n    if (state === ESounitySourceNodeState.READY) this.emit('ready');\n    this.emit('statechange');\n  }\n\n  public getState(): ESounitySourceNodeState {\n    return this.state;\n  }\n\n  start(startTime?: number) {\n    if (this.state === ESounitySourceNodeState.ERROR) return;\n\n    if (this.state === ESounitySourceNodeState.SETUP) {\n      return this.once('ready', () => this.start(startTime));\n    }\n\n    let offset = 0;\n\n    if (startTime !== undefined && this.duration !== Infinity) {\n      const startTimeInSec = startTime / 1000;\n      if (startTimeInSec >= this.duration && this.loop === true) {\n        offset = startTimeInSec % this.duration;\n      } else if (startTimeInSec < this.duration) {\n        offset = startTimeInSec;\n      } else {\n        return; // dont start! the audio is already finished\n      }\n    }\n\n    this.audioBufferSourceNode.start(0, offset);\n  }\n\n  public move(x: number, y: number, z: number): void {\n    this.posX = x;\n    this.posY = z;\n    this.posZ = y;\n  }\n\n  public rotate(x: number, y: number, z: number): void {\n    const { forward } = principalAxesToOrientation(z * -1, x, y);\n\n    this.rotX = forward.x;\n    this.rotY = forward.y;\n    this.rotZ = forward.z;\n  }\n\n  stop() {\n    if (this.state === ESounitySourceNodeState.ERROR) return;\n\n    if (this.state === ESounitySourceNodeState.SETUP) {\n      return this.once('ready', () => this.stop());\n    }\n\n    this.audioBufferSourceNode.stop(0);\n  }\n\n  dispose() {\n    this.disconnect();\n  }\n\n  private getVolume() {\n    if (this.outputType === 'music') {\n      return this.volume * this.sounityController.getMusicVolume();\n    } else if (this.outputType === 'sfx') {\n      return this.volume * this.sounityController.getSfxVolume();\n    }\n\n    return this.volume;\n  }\n\n  public tick(endTime: number) {\n    this.pannerNode.positionX.linearRampToValueAtTime(this.posX, endTime);\n    this.pannerNode.positionY.linearRampToValueAtTime(this.posY, endTime);\n    this.pannerNode.positionZ.linearRampToValueAtTime(this.posZ, endTime);\n\n    this.pannerNode.orientationX.linearRampToValueAtTime(this.rotX, endTime);\n    this.pannerNode.orientationY.linearRampToValueAtTime(this.rotY, endTime);\n    this.pannerNode.orientationZ.linearRampToValueAtTime(this.rotZ, endTime);\n\n    this.volumeGainNode.gain.linearRampToValueAtTime(this.getVolume(), endTime);\n  }\n}\n","import { principalAxesToOrientation } from './helper/CalcOrientation';\nimport Clock from './helper/Clock';\nimport ISourceNodeOptions from './nodes/ISourceNodeOptions';\nimport SounityOutputNode from './nodes/SounityOutputNode';\nimport SounitySoundNode, { ESounitySourceNodeState } from './nodes/SounitySoundNode';\n\n//window.addEventListener('message', (event) => event.data.type in events && events[event.data.type](event.data));\nexport type FilterType = 'biquad' | 'convolver';\n\nexport default class SountiyController {\n  private soundNodes: Record<string, SounitySoundNode> = {};\n  private availableFilters: Record<string, { type: FilterType; options: any }> = {};\n  private audioCtx: AudioContext;\n  private clock: Clock = new Clock();\n\n  // listener position\n  private posX: number = 0;\n  private posY: number = 0;\n  private posZ: number = 0;\n\n  // listener orientation\n  private forwardX: number = 1;\n  private forwardY: number = 0;\n  private forwardZ: number = 0;\n  private upX: number = 0;\n  private upY: number = 1;\n  private upZ: number = 0;\n\n  // volumes\n  private masterVolume: number = 1;\n  private sfxVolume: number = 1;\n  private musicVolume: number = 1;\n\n  private tickId: number;\n\n  private outputNode: SounityOutputNode;\n\n  constructor() {\n    this.audioCtx = new AudioContext();\n\n    this.outputNode = new SounityOutputNode(this);\n    this.outputNode.connect(this.audioCtx.destination);\n\n    this.tickId = setInterval(() => {\n      this.tick();\n    });\n  }\n\n  public moveListener(x: number, y: number, z: number) {\n    this.posX = x;\n    this.posY = z;\n    this.posZ = y;\n  }\n\n  public rotateListener(x, y, z) {\n    const { forward, up } = principalAxesToOrientation(z, x, y);\n\n    this.forwardX = forward.x;\n    this.forwardY = forward.y * -1;\n    this.forwardZ = forward.z;\n\n    this.upX = up.x;\n    this.upY = up.y;\n    this.upZ = up.z;\n  }\n\n  public setVolume(sfxVolume: number, musicVolume: number) {\n    this.sfxVolume = sfxVolume;\n    this.musicVolume = musicVolume;\n  }\n\n  public getAudioCtx() {\n    return this.audioCtx;\n  }\n\n  private getSoundNode(identifier: string): SounitySoundNode {\n    if (identifier in this.soundNodes) return this.soundNodes[identifier];\n\n    throw new Error(`There does not exists a sound with given identifier '${identifier}'`);\n  }\n\n  public createSound(identifier: string, url: string, options: ISourceNodeOptions): void {\n    if (identifier in this.soundNodes)\n      throw new Error(`There already exists a sound with given identifier '${identifier}'`);\n\n    const soundNode = new SounitySoundNode(identifier, url, options, this);\n\n    soundNode.connect(this.outputNode.getInputNode());\n\n    this.soundNodes[identifier] = soundNode;\n  }\n\n  public startSound(identifier: string, startTime?: number): void {\n    this.getSoundNode(identifier).start(startTime);\n  }\n\n  public stopSound(identifier: string): void {\n    this.getSoundNode(identifier).stop();\n  }\n\n  public setCurrentTime(identifier: string, newTime: number): void {\n    // this.getSoundNode(identifier).setCurrentTime(newTime);\n  }\n\n  public moveSound(identifier: string, x: number, y: number, z: number): void {\n    this.getSoundNode(identifier).move(x, y, z);\n  }\n\n  public rotateSound(identifier: string, x: number, y: number, z: number): void {\n    this.getSoundNode(identifier).rotate(x, y, z);\n  }\n\n  public disposeSound(identifier: string): void {\n    this.getSoundNode(identifier).dispose();\n  }\n\n  private tick() {\n    const endTime = this.audioCtx.currentTime + this.clock.getDelta();\n\n    // controller tick logic\n\n    this.audioCtx.listener.positionX.linearRampToValueAtTime(this.posX, endTime);\n    this.audioCtx.listener.positionY.linearRampToValueAtTime(this.posY, endTime);\n    this.audioCtx.listener.positionZ.linearRampToValueAtTime(this.posZ, endTime);\n\n    this.audioCtx.listener.forwardX.linearRampToValueAtTime(this.forwardX, endTime);\n    this.audioCtx.listener.forwardY.linearRampToValueAtTime(this.forwardY, endTime);\n    this.audioCtx.listener.forwardZ.linearRampToValueAtTime(this.forwardZ, endTime);\n\n    this.audioCtx.listener.upX.linearRampToValueAtTime(this.upX, endTime);\n    this.audioCtx.listener.upY.linearRampToValueAtTime(this.upY, endTime);\n    this.audioCtx.listener.upZ.linearRampToValueAtTime(this.upZ, endTime);\n\n    // tick nodes that are ready\n    for (const soundNode of Object.values(this.soundNodes)) {\n      if (soundNode.getState() !== ESounitySourceNodeState.SETUP) soundNode.tick(endTime);\n    }\n\n    // tick output node\n    this.outputNode.tick(endTime);\n  }\n\n  public createFilter(identifier: string, type: 'biquad', options: BiquadFilterOptions);\n  public createFilter(identifier: string, type: 'convolver', options: { url: string; disableNormalization: boolean });\n  public createFilter(identifier: string, type: FilterType, options: any) {\n    if (identifier in this.availableFilters)\n      throw new Error(`There already exists a filter with given identifier '${identifier}'`);\n\n    this.availableFilters[identifier] = { type, options };\n  }\n\n  // internal function\n  public getFilterOptions(identifier: string) {\n    if (identifier in this.availableFilters) return this.availableFilters[identifier];\n\n    throw new Error(`There does not exists a filter with given identifier '${identifier}'`);\n  }\n\n  public addSoundFilter(identifier: string, filterName: string) {\n    this.getSoundNode(identifier).addFilter(filterName);\n  }\n\n  public removeSoundFilter(identifier: string, filterName: string) {\n    this.getSoundNode(identifier).removeFilter(filterName);\n  }\n\n  public addListenerFilter(filterName: string) {\n    this.outputNode.addFilter(filterName);\n  }\n\n  public removeListenerFilter(filterName: string) {\n    this.outputNode.removeFilter(filterName);\n  }\n\n  public getMusicVolume() {\n    return this.musicVolume / 10;\n  }\n\n  public getSfxVolume() {\n    return this.sfxVolume / 10;\n  }\n}\n","import SountiyController, { FilterType } from './SounityController';\n\nconst sounityController = new SountiyController();\n\n// for debugging\n//@ts-ignore\nwindow.sounityController = sounityController;\n\nconst handlers = {\n  update(data) {\n    sounityController.moveListener(data.posX, data.posY, data.posZ);\n    sounityController.rotateListener(data.rotX, data.rotY, data.rotZ);\n    sounityController.setVolume(data.sfxVolume, data.musicVolume);\n  },\n\n  moveSound(data) {\n    sounityController.moveSound(data.identifier, data.posX, data.posY, data.posZ);\n  },\n\n  rotateSound(data) {\n    sounityController.rotateSound(data.identifier, data.rotX, data.rotY, data.rotZ);\n  },\n\n  createSound(data) {\n    sounityController.createSound(data.identifier, data.source, data.options);\n  },\n\n  startSound(data) {\n    sounityController.startSound(data.identifier, data.startTime);\n  },\n\n  stopSound(data) {\n    sounityController.stopSound(data.identifier);\n  },\n\n  disposeSound(data) {\n    sounityController.disposeSound(data.identifier);\n  },\n\n  addSoundFilter(data) {\n    sounityController.addSoundFilter(data.identifier, data.filterName);\n  },\n\n  removeSoundFilter(data) {\n    sounityController.removeSoundFilter(data.identifier, data.filterName);\n  },\n\n  addListenerFilter(data) {\n    sounityController.addListenerFilter(data.filterName);\n  },\n\n  removeListenerFilter(data) {\n    sounityController.removeListenerFilter(data.filterName);\n  },\n\n  createFilter(data) {\n    sounityController.createFilter(data.filterName, data.filterType, data.options);\n  },\n};\n\nwindow.addEventListener('message', (event) => {\n  if (event.data.type in handlers) handlers[event.data.type](event.data);\n});\n\n// @ts-ignore\nfetch(`https://${GetParentResourceName()}/sounity:ready`);\n"]}